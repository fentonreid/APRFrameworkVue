{
  "weekContent": [
    {
      "id": "Week 1",
      "totalHours": 16,
      "entries": [
        {
          "hour": 4,
          "description": "Planning the framework and then started to work on snakeyaml parsing"
        },
        {
          "hour": 3,
          "description": "Getting snakeYAML to work and planning the custom objects for gp and defects4J"
        },
        {
          "hour": 6,
          "description": "Proper parsing of the GP object, can deal with a list of mutationOperator classes or ‘all’ option, <br>Initial parsing of the Defects4J object"
        },
        {
          "hour": 3,
          "description": "Move main.java code out into Parser/runner.class and beginning initial setup of Defects4J"
        }
      ]
    },

    {
      "id": "Week 2",
      "totalHours": 25,
      "entries": [
        {
          "hour": 6,
          "description": "Validation for all properties, Defects4J setup, testCaseSelection yaml parsing and verification to a generalised structure"
        },
        {
          "hour": 5,
          "description": "Add ‘tmp/src/[identifier]/[BID_id]/Iterations/[iterations]/[mutationOperators] directory structure,<br>Added projectsPath static class that contains a list of directories relevant to the project"
        },
        {
          "hour": 7,
          "description": "Now able to get dynamic variables from a given path,<br>Can copy files to a destination,<br>Planned how to get and validate buggy program and fixed programs"
        },
        {
          "hour": 7,
          "description": "Moved to using Docker with Defects4J,<br>Planning how to provide config.yml,<br>Can run a test Java project in Docker,<br>SnakeYAML external.jar is added to test project via the Dockerfile and is built correctly,<br>SnakeYAML works correctly with Docker"
        }
      ]
    },

    {
      "id": "Week 3",
      "totalHours": 31,
      "entries": [
        {
          "hour": 7,
          "description": "Getting current Java project to work with Docker,<br>Project setup for development,<br>Mounted output file from container to host (so output files can be created)"
        },
        {
          "hour": 3,
          "description": "Setup CI/CD pipeline with Github actions,<br>Rewrote word files to markdown files"
        },
        {
          "hour": 7,
          "description": "Setup example project for maven,<br>Got snakeyaml, javaparser, Javadoc and junit5 setup,<br>Added volume sharing for src directory and output Javadoc to host directory"
        },
        {
          "hour": 5,
          "description": "Refactoring of parser, ~430 lines of code to ~280"
        },
        {
          "hour": 5,
          "description": "Refactoring ProjectPaths and creating ProjectPath class to represent the dynamic variables of a path string"
        },
        {
          "hour": 3,
          "description": "Validating the fixed and buggy code as well as checking out local repository"
        },
        {
          "hour": 1,
          "description": "Created a new project for GP parsing and AST manipulation"
        }
      ]
    },

    {
      "id": "Week 4",
      "totalHours": 24,
      "entries": [
        {
          "hour": 5,
          "description": "Setup GP testing project with docker,<br>Got number of test cases from checked out project,<br>Compiled and test program,<br>Working on a comparison between execution times currently: 16 hours with a population size of 100 for 100 generations}"
        },
        {
          "hour": 4,
          "description": "Logging how long it takes to run a GP with variable hyperparameters,<br>Trying to optimise these values, with optimising of code went from 2 days to 7.6 hours"
        },
        {
          "hour": 7,
          "description": "Create a GPThread that can handle the fitness function calculations for 1 thread,<br>Splitting this into two threads to log performance, got it working with 2 threads no .join required,<br>Remove comments from AST for copying of smaller file sizes"
        },
        {
          "hour": 8,
          "description": "Tried out Kubernetes on Digital Ocean,<br>Tried out VM machine on Digital Ocean and linode (slower by x2/x3)"
        }
      ]
    },

    {
      "id": "Week 5",
      "totalHours": 26,
      "entries": [
        {
          "hour": 10,
          "description": "Generic thread splitting,<br>Investigation of Defects4J bugs,<br>Researching Kubernetes,<br>Setup Kubctl and Doctl"
        },
        {
          "hour": 7,
          "description": "Got GP moved into dev project with multiple bugs being able to be run with different hyperparameters,<br>Fixed mutation rate issue with parser, when it had a value of 1,<br>Output patches of each bug into an output folder along with the given fixed patch,<br>Started writing tests for the Parser and Util classes"
        },
        {
          "hour": 5,
          "description": "Wrote ShellProcessBuilder tests,<br>Wrote ProjectPaths tests,<br>Wrote Defects4J tests"
        },
        {
          "hour": 4,
          "description": "Updated APRFramework Dockerfile and CI/CD pipeline,<br>Drafted an example CSV output file,<br>Created powerpoint presentation with example mutations"
        }
      ]
    },

    {
      "id": "Week 6",
      "totalHours": 29,
      "entries": [
        {
          "hour": 4,
          "description": "Added csv output, for general details and iteration details,<br>Planning PatchViewer + website"
        },
        {
          "hour": 3,
          "description": "Got patchviewer and docstrings options added to config.yml along with code to handle that implemented,<br>Refactored the project changing package names"
        },
        {
          "hour": 6,
          "description": "Began a quick introduction to Vue.js"
        },
        {
          "hour": 5,
          "description": "Started implementing vue website, prototyped patch viewer"
        },
        {
          "hour": 7,
          "description": "PatchViewer can now filter and classify patches and switch patches,<br>Restyled navbar with added home button,<br>Patchviewer now patches the classification so less writing to db is needed"
        },
        {
          "hour": 4,
          "description": "Researching and designing mutation operators,<br>Creating a presentation of 5 generic mutation operators, with possible combination to create 3"
        }
      ]
    },
    {
      "id": "Week 7",
      "totalHours": 38,
      "entries": [
        {
          "hour": 4,
          "description": "Classified 703 bugs into 5 mutation operators, or a mix, or other,<br>Had meeting with my supervisor, make a start on mutation operators,<br>Started implementing bar mutation"
        },
        {
          "hour": 7,
          "description": "Reading the Javaparser visited pdf,<br> Created a visitor to collect all binaryExprs,<br>Reworked this into using foreach"
        },
        {
          "hour": 7,
          "description": "Worked on removing a conditional expression, can currently only remove first condition,<br>Worked on lrr specifically line removal, have created a list of allowed nodes to remove and at random will remove one,<br>Added try, catch specificity so that either the try statement, a catch statement or finally statement is removed"
        },
        {
          "hour": 5,
          "description": "Worked on wrong method (WRM) mutation,<br>Got it working for overloaded methods where it handles; variable declarations, object creation and method call expressions"
        },
        {
          "hour": 3,
          "description": "Started to refactor BAR mutation, adding collecting of binaryExpr, binaryLiteralExpr and Unary Expr,<br>Operator replacements for binary, binaryLiteral and Unary expressions are functional"
        },
        {
          "hour": 3,
          "description": "Adding processLog and processLogEntry components to the vue website under the route '/processlog'"
        },
        {
          "hour": 8,
          "description": "Unary expression addition to operators,<br>Added object creation expression to WRM mutation,<br> Constricting the fields to the class the expression was found at and valid types must be declared before the compared expressions"
        },
        {
          "hour": 1,
          "description": "BER implementation planned and started"
        }
      ]
    },
    {
      "id": "Week 8",
      "totalHours": 19,
      "entries": [
        {
          "hour": 4,
          "description": "BER removal complete, with unary/enclosed expressions and regular binary expressions"
        },
        {
          "hour": 1,
          "description": "Planning SVM mutation"
        },
        {
          "hour": 3,
          "description": "Fix GP issue where a project could not be checked out in time"
        },
        {
          "hour": 2,
          "description": "Include the program in a jar file with self contained dependencies"
        },
        {
          "hour": 6,
          "description": "Reworked parsing so that validation of modified and relevant classes is done before the gp is started,<br>Bug ids in range that include non-valid ids are removed instead of throwing,<br> csv output error checking"
        },
        {
          "hour": 3,
          "description": "Started working on SVM mutation,<br>SimpleName to SimpleName mutation works, taking variable declarations from the field of the class, parameters of the method and local variables before simpleName declaration"
        }
      ]
    },
    {
      "id": "Week 9",
      "totalHours": 40.5,
      "entries": [
        {
          "hour": 2,
          "description": "Split LRR into lRemoval and lRelocation,<br>Implemented line relocation may need to limit to method declarations"
        },
        {
          "hour": 6.5,
          "description": "Split SVM into four new mutation files, for easier testing and less monolithic SVM mutation,<br>Reworked SVM mutation for it to be more general, replacing methods with variables in global or local scope in relation to class/methods,<br>Field access expressions involving enums are now handled,<br>Line Relocation mutation will now only relocate statements in the same method, and only consider methods with two or more unique nodes that can be relocated"
        },
        {
          "hour": 3,
          "description": "Worked on BER addition mutation, adding single expressions with and without negation,<br>Added binary expressions conjoined by a relational operator,<br>NEED TO GET METHOD CALLS FOR CLASS AND RESOLVE THEM!!!!"
        },
        {
          "hour": 4,
          "description": "Add to SVMMethodCall mutation the ability to get method calls from local scope and from other classes,<br>In the latter case nodes in local scope with the required type are considered, or if none are found then a new object is constructed using an available constructor,"
        },
        {
          "hour": 2,
          "description": "Removed SVM helper mutations, instead going to add a way to change the expressionCollector to aid testing,<br>Field Declarations now have compare line checking, enum declarations are now checked in the whole of the CU,<br>Method declaration resolver will now not add a method call to the method the node belongs to (prevent recursion)"
        },
        {
          "hour": 2,
          "description": "Getting all types from CU to create a binary expression for the BERExpansion mutation,<br>Moved list of boolean, relational and unary operators into MutationHelpers,<br>Renamed BAR mutation to BEM (Boolean expression manipulation) and BAR will combine both BEM AND BER together"
        },
        {
          "hour": 3,
          "description": "Creating imagemap with SVG for mutation operator tree,<br>Links for imagemap now go to corresponding pages,<br>Planned out what the mutation operator component will look like and what JSON data is required"
        },
        {
          "hour": 4,
          "description": "Create mutation page and mutation card components with initial design,<br>Initial styling of mutation card components,<br>Filter method declarations checking to make sure static methods in interface and not abstract for collection,<br>NEED TO ADD OBJECT CREATION EXPRESSIONS FOR STATIC METHODS AND FIELDS :P"
        },
        {
          "hour": 7,
          "description": "Handling of static fields and methods in general and checking for interface and abstract classes which implicitly define static fields,<br>WRM test plan written,<br>Improve highlighting of pre and post mutation code, adding highlighting to any code that was changed,<br>WRM, BEM and BER Removal mutation code added to website"
        },
        {
          "hour": 7,
          "description": "BERExpansion test plan written, BER Expansion for String and boolean types are handled differently, String types use the .equals() method for comparison and boolean types are restricted to '==' and '!=' relational operators,<br>LRR removal examples added to website,<br>LRR relocation test plan written, with a re-write of relocation so that a node is added above another random node in the same method"
        }
      ]
    },

    {
      "id": "Week 10",
      "totalHours": 34,
      "entries": [
        {
          "hour": 3,
          "description": "Added LRRelocation examples to website,<br>Higher mutations such as BAR inherit the examples of their children"
        },
        {
          "hour": 3,
          "description": "Improving BERRemoval to allow for method call expressions, boolean literal expressions to be removed,<br>BERRemoval will collect only the highest level binary expression not divide it into smaller parts"
        },
        {
          "hour": 2,
          "description": "Planning SVM examples,<br>Adding support to object creation expression when no constructors are available,<br>SVM examples added to website"
        },
        {
          "hour": 5,
          "description": "Had meeting with supervisor outlined mutation operator progress,<br>Finalised names of mutations and added descriptions and implementation details to each operator on the website,<br>Add custom expection for when the mutation needs to returns back the program unmodified,<br>GP mutation now handles the custom exception differently,<br>Javadoc navbar item and temporary javadoc pages added to website"
        },
        {
          "hour": 6,
          "description": "Fixed issue where patches with more than one modified class had been viewed as valid,<br>SVM can now modify return statements, LRemoval can now delete method declarations, binary string comparisons added to BER Expansion and BEM mutation"
        },
        {
          "hour": 5,
          "description": "GP will now only return one successful patch, use iterationPerBug to get more patches per bug,<br>Reworked fitness function, so now number of failing cases is the condition, with the GP being a minimisation problem (a patch is solved when no failing cases are recorded),<br>Error check for custom mutation error so that this is handled via returning the original mutation, for instances where running the test cases fails a high fitness value of 10,000 is set,<br>"
        },
        {
          "hour": 3,
          "description": "Plan out Generate Patches mutation and setup example page"
        },
        {
          "hour": 7,
          "description": "Testing out BERRemoval, LRRelocation and LRRemoval mutations,<br>Writing javadocs for all java files, <br> BERExpansion has a 10 chance to add a null value to the generated binary expression"
        }
      ]
    },
    {
      "id": "Week 11",
      "totalHours": "X",
      "entries": [
        {
          "hour": 9,
          "description": "Trying to add original arguments of a method call to another,<br>Writing tests for mutation helpers and started to test CSVOutput class,<br>Finished writing tests for CSVOutput and started planning the pre and post mutations tests for website mutation examples,<br>Added all mutation examples as tests and started to ensure all pass,<br>"
        },
        {
          "hour": 7,
          "description": "Adding home page to vue website,<br>Includes details for the main usages of the website, test cases implemented, creating a new mutation operator, and understanding the YAML configuration file,<br>Implemented and fixed all tests for the program"
        },
        {
          "hour": 4,
          "description": "Trying to resolve symbol solving for the program issue with parameter resolved however, example of static enum in interface is in progress,<br>"
        },
        {
          "hour": 4,
          "description": "Resolved symbol solving for the BER mutation,<br>Added full fixed program to generated patches for comparison and can now classify overfitness of generated patches on the website with updates to the database"
        },
        {
          "hour": 4,
          "description": "Worked on trying to get symbol resolving for all relevant classes of the Defects4j bug,<br>Resolve reflection types"
        }
      ]
    }
  ]
}
